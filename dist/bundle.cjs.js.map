{"version":3,"file":"bundle.cjs.js","sources":["../src/component/primitive.ts","../src/component/any.ts","../src/component/type_interface.ts","../src/component/union_types.ts","../src/component/interfaces.ts","../src/component/array.ts","../src/component/function.ts","../src/component/type_assertion.ts","../src/component/declare.ts","../src/component/built_in_object.ts","../src/component/advanced/alias.ts","../src/component/advanced/string_literal.ts","../src/component/advanced/tuple.ts","../src/component/advanced/enum.ts"],"sourcesContent":["/* Boolean */\nconst isBoolean: boolean = Boolean(1)\nconsole.log('Boolean:', {\n  isBoolean\n})\n/* number */\nconst numOne: number = 6;\nconst hex: number = 0xf00d;\nconst binary: number = 0b1010;\nconst octal: number = 0o234;\nconst notNum: number = NaN;\nconst infinity: number = Infinity;\n\nconsole.log('Number:', {\n  numOne,\n  hex,\n  binary,\n  octal,\n  notNum,\n  infinity\n});\n/* String */\nconst names: string = 'yang';\nconst setence: string = `hello, ${names} is ${numOne + 4} now`;\n\nconsole.log('String:', {\n  names,\n  setence\n})\n\n/* 空值Void */\nconst alertTime = () => {\n  // if (process.browser) window.alert(new Date())\n  new Date()\n}\n// const unusable: void = undefined;\n// const unNull: null = null;\n// const undefineds: undefined = undefined;\n// let u: void;\n// let num: number = undefineds;\n\nconsole.log({\n  time: `time: ${alertTime()}`\n  // unusable,\n  // unNull\n});\n\n/* 元组 */\nlet tuple: [string, number] = ['ss', 11];\ntuple[3] = 'sss';\nconsole.log('tuple', {\n  tuple,\n  sub: tuple[0].substr(1),\n  tuple_after: tuple,\n  tuple_5: tuple[5]\n});","/* 任意值（Any）用来表示允许赋值为任意类型 */\nlet anything: any = 'anything';\nanything = 123;\nconsole.log('anything', {\n  anything,\n  name: anything.name,\n  // firstName: anything.setName('yang')\n});\n","let auto = 'string';\nauto = 12; // 默认了String,因而报错\n\nlet autoAny;\nautoAny = 's'; // 默认any\nautoAny = 12;\n\nconsole.log('type_interface:', {\n  auto,\n  auto_typeof: typeof auto,\n  autoAny\n})","\nlet union: string | number\nconsole.log('union_types:', {\n  union: union = 'string',\n  union_num: union = 123456,\n  u_obj: union = { union }\n});\n\nfunction getLength(item: string | number): number {\n  // return item.length; // 报错：当 TypeScript 不确定一个联合类型的变量到底是哪个类型的时候，我们只能访问此联合类型的所有类型里共有的属性或方法\n  // return item.toString() // 报错\n  return Number(item)\n}\nconsole.log('getLength:', {\n  '123': getLength('123'),\n  'num_123': getLength(123)\n});\n","/* 接口 interfaces */\ninterface Person {\n  // readonly id: string,\n  name: string;\n  age?: number;\n  [propName: string]: any; // 任意属性\n}\n\nlet me: Person = {\n  id: '01',\n  name: 'Yang',\n  age: 18\n  // test: 123 // error: 多一些属性也是不允许的, 赋值的时候，变量的形状必须和接口的形状保持一致\n};\n\n// me.id = 2; // [ts] Cannot assign to 'id' because it is a constant or a read-only property.\nconsole.log('interface:', {\n  me\n});\n","/* 数组 */\nlet list: number[] = [1, 2, 3];\n\n// list = ['1', '12']; //  Type 'string' is not assignable to type 'number'\n// list.push('s'); // [ts] Argument of type '\"s\"' is not assignable to parameter of type 'number'.\n\nlet list_union: (number | string)[] = ['1', 2, 3];\n\n// 数组泛型\nlet generic: Array<string> = ['q', 'a', 'z'];\n\n// 用 any 表示数组中允许出现任意类型\nconst any: any[] = ['xx', 1, { obj: 'obj' }]\n\ninterface NumberArray {\n  [index: number]: number;\n}\n\nlet num_interface: NumberArray = [1, 2, 3, 4, 5];\n\nconsole.log('Array', {\n  list,\n  generic,\n  list_union,\n  any,\n  num_interface\n});\n","\nfunction sum(x: number, y: number): number {\n  return x + y;\n}\n\nlet mySum: (x: number, y: number) => number = function (x: number, y: number): number {\n  return x + y;\n};\n// 用接口定义函数的形状\ninterface SearchFunc {\n  (source: string, subString: string): boolean;\n}\n\nlet mySearch: SearchFunc;\n\nmySearch = function(source: string, subString: string) {\n  return source.search(subString) !== -1;\n}\n// 可选参数后面不允许再出现必须参数\nfunction buildName(firstName: string = 'first', lastName?: string) {\n  return lastName ? `${firstName} ${lastName}` : firstName\n}\n\n// 剩余参数\nfunction push(array: any[], ...items: any[]) {\n  items.forEach(item => {\n    array.push(item);\n  });\n}\n\n// 重载 - 允许一个函数接受不同数量或类型的参数时，作出不同的处理\n// TypeScript 会优先从最前面的函数定义开始匹配，所以多个函数定义如果有包含关系，需要优先把精确的定义写在前面\nfunction reverse(x: number): number;\nfunction reverse(x: string): string;\nfunction reverse(x: number | string): number | string {\n  return typeof x === 'number' \n   ? Number(x.toString().split('').reverse().join(''))\n   : typeof x === 'string' ? x.split('').reverse().join('') : ''\n}\n\nconsole.log('function:', {\n  reverse_num: reverse(12345)\n});\n\nexport {\n  sum,\n  mySum,\n  mySearch,\n  buildName,\n  push,\n  reverse\n}\n","// 问题：需要在还不确定类型的时候就访问其中一个类型的属性或方法\n// 使用类型断言，将 something 断言成 string\n// 类型断言不是类型转换，断言成一个联合类型中不存在的类型是不允许的\nfunction getLength(something: string | number): number {\n  if ((<string>something).length) {\n    return (<string>something).length;\n  } else {\n    return something.toString().length;\n  }\n}\n\nconsole.log('type_assertion:', {\n  getLength: getLength(123)\n})\n","// 声明语句\ndeclare const $:(string) => any;\n// import * as _ from 'lodash';\n\nconsole.log('typings:', {\n  // padding: _.padStart('hello typescript', 20, '')\n})","// ECMAScript 的内置对象\nlet b: Boolean = new Boolean(1);\nlet e: Error = new Error('Error occurred');\nlet d: Date = new Date();\nlet r: RegExp = /[a-z]/;\n\nconsole.log('built_in Object:', {\n  boolean: b,\n  error: e,\n  date: d,\n  reg: r,\n  mathPow: Math.pow(10, 2)\n});\n\n// DOM 和 BOM 提供的内置对象有：\n// Document、HTMLElement、Event、NodeList\n// node 报错，所以屏蔽\n/* let body: HTMLElement = document.body;\nlet allDiv: NodeList = document.querySelectorAll('div');\ndocument.addEventListener('click', function(e: MouseEvent) {\n  // Do something\n});\n */\n/* document.addEventListener('click', function(e) {\n  console.log(e.targetCurrent); // 报错：MouseEvent没有targetCurrent属性\n});\n */","// 类型别名\ntype Name = string;\ntype NameResolver = () => string;\ntype NameOrResolver = Name | NameResolver;\n\nfunction getName(n: NameOrResolver): Name {\n  if (typeof n === 'string') {\n    return n;\n  } else {\n    return n();\n  }\n}\nconsole.log('alias:', {\n  getName: getName('name')\n});","// 字符串字面量类型\n// 字符串字面量类型用来约束取值只能是某几个字符串中的一个\n\ntype EventNames = 'click' | 'scroll' | 'mousemove';\nfunction handleEvent(ele: Element, event: EventNames) {\n  // do something\n}\n// handleEvent(document.getElementById('app'), 'scroll');\n// handleEvent(document.getElementById('root'), 'dlclick') // 报错：没定义，只能取三种字符串中的一种","/* 元组 */\nlet mine: [string, number] = ['name', 20];\n\nlet custom: [string, number] = [];\ncustom[1] = 2;\ncustom.push('now');\nmine[2] = 12;\nmine.push(true) // [ts] 类型“true”的参数不能赋给类型“string | number”的参数。\n// 当赋值或访问一个已知索引的元素时，会得到正确的类型\n// 也可以只赋值其中一项\nconsole.log('tuple', {\n  name: mine[0],\n  num: mine[1].toFixed(2),\n  mine_over: mine[2],\n  custom: custom[1]\n});\n","// 枚举（Enum）类型用于取值被限定在一定范围内的场景\n// 枚举成员会被赋值为从 0 开始递增的数字，同时也会对枚举值到枚举名进行反向映射\n\n// 可以给枚举项手动赋值\n// 未手动赋值的枚举项会接着上一个枚举项递增\n// 未手动赋值的枚举项与手动赋值的可以重复，会覆盖\n// 手动赋值的枚举项可以不是数字，此时需要使用类型断言来让tsc无视类型检查\n// 手动赋值的枚举项也可以为小数或负数，此时后续未手动赋值的项的递增步长仍为 1\nenum Days { Sun = 7, Mon = 1.5, Tue, Wed, Thu = 1, Fri, Sat = -<any>'string now' }\n\nconsole.log('enum:', {\n  Sun: Days['Sun'],\n  Mon: Days[1],\n  Tue: Days[2],\n  Wed: Days[3],\n  Thu: Days[4],\n  Fri: Days[5],\n  Sat: Days['Sat']\n})"],"names":["isBoolean","Boolean","console","log","numOne","hex","binary","octal","notNum","NaN","infinity","Infinity","names","setence","alertTime","tuple","substr","anything","name","auto","autoAny","union","item","Number","getLength","me","list","list_union","generic","any","obj","num_interface","x","toString","split","reverse","join","something","length","b","e","Error","d","Date","r","Math","pow","n","getName","mine","custom","push","toFixed","Days"],"mappings":"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"}