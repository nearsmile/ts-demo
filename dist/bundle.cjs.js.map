{"version":3,"file":"bundle.cjs.js","sources":["../src/component/primitive.ts","../src/component/any.ts","../src/component/type_interface.ts","../src/component/union_types.ts","../src/component/interfaces.ts","../src/component/array.ts","../src/component/function.ts","../src/component/type_assertion.ts","../src/component/declare.ts","../src/component/built_in_object.ts","../src/component/advanced/alias.ts","../src/component/advanced/string_literal.ts","../src/component/advanced/tuple.ts","../src/component/advanced/enum.ts","../src/component/advanced/class_es6.ts","../src/component/advanced/class.ts","../src/component/advanced/class_interface.ts","../src/component/advanced/generics.ts"],"sourcesContent":["/* Boolean */\nconst isBoolean: boolean = Boolean(1)\nconsole.log('Boolean:', {\n  isBoolean\n})\n/* number */\nconst numOne: number = 6;\nconst hex: number = 0xf00d;\nconst binary: number = 0b1010;\nconst octal: number = 0o234;\nconst notNum: number = NaN;\nconst infinity: number = Infinity;\n\nconsole.log('Number:', {\n  numOne,\n  hex,\n  binary,\n  octal,\n  notNum,\n  infinity\n});\n/* String */\nconst names: string = 'yang';\nconst setence: string = `hello, ${names} is ${numOne + 4} now`;\n\nconsole.log('String:', {\n  names,\n  setence\n})\n\n/* 空值Void */\nconst alertTime = () => {\n  // if (process.browser) window.alert(new Date())\n  new Date()\n}\n// const unusable: void = undefined;\n// const unNull: null = null;\n// const undefineds: undefined = undefined;\n// let u: void;\n// let num: number = undefineds;\n\nconsole.log({\n  time: `time: ${alertTime()}`\n  // unusable,\n  // unNull\n});\n\n/* 元组 */\nlet tuple: [string, number] = ['ss', 11];\ntuple[3] = 'sss';\nconsole.log('tuple', {\n  tuple,\n  sub: tuple[0].substr(1),\n  tuple_after: tuple,\n  tuple_5: tuple[5]\n});","/* 任意值（Any）用来表示允许赋值为任意类型 */\nlet anything: any = 'anything';\nanything = 123;\nconsole.log('anything', {\n  anything,\n  name: anything.name,\n  // firstName: anything.setName('yang')\n});\n","let auto = 'string';\nauto = 12; // 默认了String,因而报错\n\nlet autoAny;\nautoAny = 's'; // 默认any\nautoAny = 12;\n\nconsole.log('type_interface:', {\n  auto,\n  auto_typeof: typeof auto,\n  autoAny\n})","\nlet union: string | number\nconsole.log('union_types:', {\n  union: union = 'string',\n  union_num: union = 123456,\n  u_obj: union = { union }\n});\n\nfunction getLength(item: string | number): number {\n  // return item.length; // 报错：当 TypeScript 不确定一个联合类型的变量到底是哪个类型的时候，我们只能访问此联合类型的所有类型里共有的属性或方法\n  // return item.toString() // 报错\n  return Number(item)\n}\nconsole.log('getLength:', {\n  '123': getLength('123'),\n  'num_123': getLength(123)\n});\n","/* 接口 interfaces */\ninterface Person {\n  // readonly id: string,\n  name: string;\n  age?: number;\n  [propName: string]: any; // 任意属性\n}\n\nlet me: Person = {\n  id: '01',\n  name: 'Yang',\n  age: 18\n  // test: 123 // error: 多一些属性也是不允许的, 赋值的时候，变量的形状必须和接口的形状保持一致\n};\n\n// me.id = 2; // [ts] Cannot assign to 'id' because it is a constant or a read-only property.\nconsole.log('interface:', {\n  me\n});\n","/* 数组 */\nlet list: number[] = [1, 2, 3];\n\n// list = ['1', '12']; //  Type 'string' is not assignable to type 'number'\n// list.push('s'); // [ts] Argument of type '\"s\"' is not assignable to parameter of type 'number'.\n\nlet list_union: (number | string)[] = ['1', 2, 3];\n\n// 数组泛型\nlet generic: Array<string> = ['q', 'a', 'z'];\n\n// 用 any 表示数组中允许出现任意类型\nconst any: any[] = ['xx', 1, { obj: 'obj' }]\n\ninterface NumberArray {\n  [index: number]: number;\n}\n\nlet num_interface: NumberArray = [1, 2, 3, 4, 5];\n\nconsole.log('Array', {\n  list,\n  generic,\n  list_union,\n  any,\n  num_interface\n});\n","\nfunction sum(x: number, y: number): number {\n  return x + y;\n}\n\nlet mySum: (x: number, y: number) => number = function (x: number, y: number): number {\n  return x + y;\n};\n// 用接口定义函数的形状\ninterface SearchFunc {\n  (source: string, subString: string): boolean;\n}\n\nlet mySearch: SearchFunc;\n\nmySearch = function(source: string, subString: string) {\n  return source.search(subString) !== -1;\n}\n// 可选参数后面不允许再出现必须参数\nfunction buildName(firstName: string = 'first', lastName?: string) {\n  return lastName ? `${firstName} ${lastName}` : firstName\n}\n\n// 剩余参数\nfunction push(array: any[], ...items: any[]) {\n  items.forEach(item => {\n    array.push(item);\n  });\n}\n\n// 重载 - 允许一个函数接受不同数量或类型的参数时，作出不同的处理\n// TypeScript 会优先从最前面的函数定义开始匹配，所以多个函数定义如果有包含关系，需要优先把精确的定义写在前面\nfunction reverse(x: number): number;\nfunction reverse(x: string): string;\nfunction reverse(x: number | string): number | string {\n  return typeof x === 'number' \n   ? Number(x.toString().split('').reverse().join(''))\n   : typeof x === 'string' ? x.split('').reverse().join('') : ''\n}\n\nconsole.log('function:', {\n  reverse_num: reverse(12345)\n});\n\nexport {\n  sum,\n  mySum,\n  mySearch,\n  buildName,\n  push,\n  reverse\n}\n","// 问题：需要在还不确定类型的时候就访问其中一个类型的属性或方法\n// 使用类型断言，将 something 断言成 string\n// 类型断言不是类型转换，断言成一个联合类型中不存在的类型是不允许的\nfunction getLength(something: string | number): number {\n  if ((<string>something).length) {\n    return (<string>something).length;\n  } else {\n    return something.toString().length;\n  }\n}\n\nconsole.log('type_assertion:', {\n  getLength: getLength(123)\n})\n","// 声明语句\ndeclare const $:(string) => any;\n// import * as _ from 'lodash';\n\nconsole.log('typings:', {\n  // padding: _.padStart('hello typescript', 20, '')\n})","// ECMAScript 的内置对象\nlet b: Boolean = new Boolean(1);\nlet e: Error = new Error('Error occurred');\nlet d: Date = new Date();\nlet r: RegExp = /[a-z]/;\n\nconsole.log('built_in Object:', {\n  boolean: b,\n  error: e,\n  date: d,\n  reg: r,\n  mathPow: Math.pow(10, 2)\n});\n\n// DOM 和 BOM 提供的内置对象有：\n// Document、HTMLElement、Event、NodeList\n// node 报错，所以屏蔽\n/* let body: HTMLElement = document.body;\nlet allDiv: NodeList = document.querySelectorAll('div');\ndocument.addEventListener('click', function(e: MouseEvent) {\n  // Do something\n});\n */\n/* document.addEventListener('click', function(e) {\n  console.log(e.targetCurrent); // 报错：MouseEvent没有targetCurrent属性\n});\n */","// 类型别名\ntype Name = string;\ntype NameResolver = () => string;\ntype NameOrResolver = Name | NameResolver;\n\nfunction getName(n: NameOrResolver): Name {\n  if (typeof n === 'string') {\n    return n;\n  } else {\n    return n();\n  }\n}\nconsole.log('alias:', {\n  getName: getName('name')\n});","// 字符串字面量类型\n// 字符串字面量类型用来约束取值只能是某几个字符串中的一个\n\ntype EventNames = 'click' | 'scroll' | 'mousemove';\nfunction handleEvent(ele: Element, event: EventNames) {\n  // do something\n}\n// handleEvent(document.getElementById('app'), 'scroll');\n// handleEvent(document.getElementById('root'), 'dlclick') // 报错：没定义，只能取三种字符串中的一种","/* 元组 */\nlet mine: [string, number] = ['name', 20];\n\nlet custom: [string, number] = [];\ncustom[1] = 2;\ncustom.push('now');\nmine[2] = 12;\nmine.push(true) // [ts] 类型“true”的参数不能赋给类型“string | number”的参数。\n// 当赋值或访问一个已知索引的元素时，会得到正确的类型\n// 也可以只赋值其中一项\nconsole.log('tuple', {\n  name: mine[0],\n  num: mine[1].toFixed(2),\n  mine_over: mine[2],\n  custom: custom[1]\n});\n","// 枚举（Enum）类型用于取值被限定在一定范围内的场景\n// 枚举成员会被赋值为从 0 开始递增的数字，同时也会对枚举值到枚举名进行反向映射\n\n// 可以给枚举项手动赋值\n// 未手动赋值的枚举项会接着上一个枚举项递增\n// 未手动赋值的枚举项与手动赋值的可以重复，会覆盖\n// 手动赋值的枚举项可以不是数字，此时需要使用类型断言来让tsc无视类型检查\n// 手动赋值的枚举项也可以为小数或负数，此时后续未手动赋值的项的递增步长仍为 1\nenum Days { Sun = 7, Mon = 1.5, Tue, Wed, Thu = 1, Fri, Sat = -<any>'string now' }\n\nconsole.log('enum:', {\n  Sun: Days['Sun'],\n  Mon: Days[1],\n  Tue: Days[2],\n  Wed: Days[3],\n  Thu: Days[4],\n  Fri: Days[5],\n  Sat: Days['Sat']\n})\n\nenum Color { Red, Green, Blue = 'blue'.length } // \"blue\".length 就是一个计算所得项\n\nconst enum Directions { Up, Down, Left, Right }\n// declare const enum Direction { Up, Down, Left, Right }\nlet directions = [Directions.Up, Directions.Down, Directions.Left, Directions.Right]\n// let direction = [Direction.Up, Direction.Down, Direction.Left, Direction.Right]\nconsole.log('enum2:', {\n  color: Color['Blue'],\n  directions,\n  // direction\n})\n","/* ES6 中类的用法 */\nclass Animal {\n  name: any;\n  static num = 42;\n  \n  static isAnimal(a) {\n    return a instanceof Animal\n  }\n\n  constructor (name) {\n    this.name = name;\n  }\n\n  get name() {\n    return 'default Jack'\n  }\n\n  set name(value) {\n    console.log(`ES6-setter: ${ value }`)\n  }\n\n  say () {\n    return `answer: ${ this.name }`;\n  }\n}\n\nclass Cat extends Animal { // 继承\n  constructor(name) {\n    super(name);\n  }\n\n  say () {\n    return `Meow ${ super.say() }`\n  }\n}\n\nlet a: void = new Animal('Hello');\nlet c = new Cat('Tom')\nlet k = new Animal('Kitty')\nk.name = 'kitty'\n\n// console.log(`%cclass_ES6:${a.say()}`, 'color: red');\nconsole.log(`class_ES6:`, {\n  es6: a.say(),\n  cat: c.say(),\n  aSet: k.name,\n  static: Animal.isAnimal(k)\n});\n","class Animals {\n  // public name;\n  private name: string;\n  // protected name;\n  public constructor(name: string) {\n    this.name = name;\n  }\n}\n\nlet a: Animals = new Animals('Jack');\nconsole.log('a.name', a.name);\n\na.name = 'Tom';\nconsole.log('a.name2:', a.name);\n\nclass Cat extends Animals {\n  constructor(name:string) {\n    super(name);\n    console.log('Cat.name', this.name)\n  }\n}\n\nlet cat: Cat = new Animals('Cat')\nconsole.log('cat:', cat.name)\n\nabstract class Title {\n  public name: string;\n  public constructor(name: string) {\n    this.name = name;\n  }\n  public abstract header(): string\n}\n\nclass SubTitle extends Title {\n  public header():string {\n    console.log(`this is header ${ this.name }`)\n  }\n}\n// let title = new Title('title name') // [ts] 无法创建抽象类“Title”的实例。\nlet title: SubTitle = new SubTitle('subTitle')\nconsole.log('subTitle:', title.name);\n","/* 简单例子 */\n// 实现门中的防盗门与车都有的报警器功能\n// 类实现接口\ninterface Alarm {\n  alerts();\n}\n\nclass Door {\n }\n\nclass SecurityDoor extends Door implements Alarm {\n  alerts() {\n    console.log('SecurityDoor alert');\n  }\n}\n\n// 一个类可以实现多个接口\ninterface Light {\n  lightOn();\n  lightOff();\n}\n\nclass Car implements Alarm, Light {\n  alerts () {\n    console.log('car alert');\n  }\n\n  lightOn () {\n    console.log('car light on');\n  }\n\n  lightOff () {\n    console.log('car light off');\n  }\n}\n\n// 接口与接口之间可以是继承关系\n// 使用 extends 使 LightableAlarm 继承 Alarm\ninterface LightableAlarm extends Alarm {\n  lightOn();\n  lightOff();\n}\n\n// 接口继承类\nclass Point {\n  x: number;\n  y: number;\n}\n\ninterface Point3d extends Point {\n  z: number;\n}\n\nlet point: Point3d = { x: 1, y: 2, z: 3 };\nconsole.log('class_interface', {\n  point\n})\n\n// 混合类型\n// 一个函数还可以有自己的属性和方法\ninterface Counter {\n  (start: number): string;\n  interval: number;\n  reset(): void;\n}\n\nfunction getCounter(): Counter {\n  let counter = <Counter>function (start: number) { };\n  counter.interval = 123;\n  counter.reset = function () {};\n  return counter;\n}\n\nlet c = getCounter();\n\nconsole.log('class_interface', {\n  c10: c(10),\n  c_reset: c.reset(),\n  c_interval: c.interval = 5.0\n})","// 实现一个函数 createArray，\n// 它可以创建一个指定长度的数组，同时将每一项都填充一个默认值\n// Array<any> 允许数组的每一项都为任意类型。但是我们预期的是，数组中每一项都应该是输入的 value 的类型\n// 在函数名后添加了 <T>，其中 T 用来指代任意输入的类型，在后面的输入 value: T 和输出 Array<T> 中即可使用了\n\nconsole.info('******************** generics *************************')\n// function createArray (length: number, value: any): Array<any> {\nfunction createArray<T> (length: number, value: T): Array<T> {\n  let result = [];\n  for (let i = 0; i < length; i++) {\n    result[i] = value; \n  }\n  return result;\n}\n\nconsole.log('generics:', {\n  createArray: createArray(3, 'x')\n});\n\n// 定义泛型的时候，可以一次定义多个类型参数\nfunction swap<T, U>(tuple: [T, U]): [U, T] {\n  return [tuple[1], tuple[0]];\n}\n\nconsole.log('genericsMulti', {\n  swap: swap([7, 'seven'])\n})\n\n// 泛型约束：在函数内部使用泛型变量的时候，由于事先不知道它是哪种类型，所以不能随意的操作它的属性或方法\ninterface Lengthwise {\n  length: number;\n}\n\nfunction logId<T extends Lengthwise>(arg: T): T {\n  console.log('generics-logId:', arg.length) // 报错：[ts] 类型“T”上不存在属性“length”。\n  return arg\n}\nlogId('7');\n\n// 使用了两个类型参数，其中要求 T 继承 U，这样就保证了 U 上不会出现 T 中不存在的字段\nfunction copyFields<T extends U, U>(target: T, source: U): T {\n  for (let id in source) {\n    target[id] = (<T>source)[id];\n  }\n  return target\n}\n\nlet x = { a: 1, b: 2, c: 3, d: 4 }\nconsole.log('generics-copy:', {\n  copyFields: copyFields(x, { b: 10, d: 20 })\n})\n\n// 可以使用含有泛型的接口来定义函数的形状\n// 可以把泛型参数提前到接口名上,此时在使用泛型接口的时候，需要定义泛型的类型\ninterface CreateArrayFunc<T> {\n  (length: number, value: T): Array<T>;\n}\n\nlet createArr: CreateArrayFunc<any>;\ncreateArr = function<T>(length: number, value: T): Array<T> {\n  let result = [];\n  for (let i = 0; i < length; i++) {\n    result[i] = value;\n  }\n  return result;\n}\n\nconsole.log('generic-arr', {\n  createArr: createArr(5, 'x')\n})\n\nclass GenericNumber<T> {\n  zeroValue: T;\n  add: (x: T, y: T) => T;\n}\n\nlet numTotal = new GenericNumber<number>();\nnumTotal.zeroValue = 0;\nnumTotal.add = function(x, y) { return x + y };\nconsole.log('numTotal', {\n  zero: numTotal.zeroValue,\n  add: numTotal.add(1, 2)\n})\nconsole.info('******************************************************')"],"names":["isBoolean","Boolean","console","log","numOne","hex","binary","octal","notNum","NaN","infinity","Infinity","names","setence","alertTime","tuple","substr","anything","name","auto","autoAny","union","item","Number","getLength","me","list","list_union","generic","any","obj","num_interface","x","toString","split","reverse","join","something","length","b","e","Error","d","Date","r","Math","pow","n","getName","mine","custom","push","toFixed","Days","Color","Directions","directions","Up","Down","Left","Right","a","Animal","value","_super","say","c","Cat","k","isAnimal","Animals","cat","Title","title","SubTitle","Door","point","y","z","counter","start","interval","reset","getCounter","info","result","i","createArray","swap","arg","logId","target","source","id","copyFields","createArr","numTotal","GenericNumber","zeroValue","add"],"mappings":"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"}